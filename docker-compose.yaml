networks:
  ah_network:
    driver: bridge
services:
  adminer:
    container_name: adminer
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - ADMINER_DEFAULT_SERVER=${ADMINER_DEFAULT_SERVER}
    healthcheck:
      interval: 30s
      retries: 3
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      timeout: 10s
    image: adminer:${ADMINER_VERSION}
    networks:
      - ah_network
    ports:
      - ${ADMINER_PORT}:8080
    restart: always
  postgres:
    container_name: postgres
    deploy:
      resources:
        limits:
          memory: 1g
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    healthcheck:
      interval: 30s
      retries: 5
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      timeout: 10s
    image: postgres:${POSTGRES_VERSION}
    networks:
      - ah_network
    ports:
      - ${POSTGRES_PORT}:5432
    restart: always
    shm_size: 128mb
    volumes:
      - postgres:/var/lib/postgresql/data
volumes:
  postgres:
    driver: local
